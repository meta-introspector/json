(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

(*
fn main() {
    println!("cargo:rerun-if-changed=build.rs");

    // Decide ideal limb width for arithmetic in the float parser. Refer to
    // src/lexical/math.rs for where this has an effect.
    let target_arch = env::var("CARGO_CFG_TARGET_ARCH").unwrap();
    match target_arch.as_str() {
        "aarch64" | "mips64" | "powerpc64" | "x86_64" | "loongarch64" => {
            println!("cargo:rustc-cfg=limb_width_64");
        }
        _ => {
            println!("cargo:rustc-cfg=limb_width_32");
        }
    }
}
*)
Definition main : M unit :=
  let* _ : M.Val unit :=
    let* _ : M.Val unit :=
      let* α0 : ref str.t :=
        M.read (mk_str "cargo:rerun-if-changed=build.rs
") in
      let* α1 : M.Val (array (ref str.t)) := M.alloc [ α0 ] in
      let* α2 : core.fmt.Arguments.t :=
        M.call
          (core.fmt.Arguments.t::["new_const"]
            (pointer_coercion "Unsize" (borrow α1))) in
      let* α3 : unit := M.call (std.io.stdio._print α2) in
      M.alloc α3 in
    M.alloc tt in
  let* target_arch : M.Val alloc.string.String.t :=
    let* α0 : ref str.t := M.read (mk_str "CARGO_CFG_TARGET_ARCH") in
    let* α1 : core.result.Result.t alloc.string.String.t std.env.VarError.t :=
      M.call (std.env.var α0) in
    let* α2 : alloc.string.String.t :=
      M.call
        ((core.result.Result.t
              alloc.string.String.t
              std.env.VarError.t)::["unwrap"]
          α1) in
    M.alloc α2 in
  let* α0 : ref str.t :=
    M.call (alloc.string.String.t::["as_str"] (borrow target_arch)) in
  let* α1 : M.Val (ref str.t) := M.alloc α0 in
  let* α0 : M.Val unit :=
    match_operator
      α1
      [
        fun γ =>
          (let* _ : M.Val unit :=
            let* _ : M.Val unit :=
              let* α0 : ref str.t :=
                M.read (mk_str "cargo:rustc-cfg=limb_width_64
") in
              let* α1 : M.Val (array (ref str.t)) := M.alloc [ α0 ] in
              let* α2 : core.fmt.Arguments.t :=
                M.call
                  (core.fmt.Arguments.t::["new_const"]
                    (pointer_coercion "Unsize" (borrow α1))) in
              let* α3 : unit := M.call (std.io.stdio._print α2) in
              M.alloc α3 in
            M.alloc tt in
          M.alloc tt) :
          M (M.Val unit);
        fun γ =>
          (let* _ : M.Val unit :=
            let* _ : M.Val unit :=
              let* α0 : ref str.t :=
                M.read (mk_str "cargo:rustc-cfg=limb_width_64
") in
              let* α1 : M.Val (array (ref str.t)) := M.alloc [ α0 ] in
              let* α2 : core.fmt.Arguments.t :=
                M.call
                  (core.fmt.Arguments.t::["new_const"]
                    (pointer_coercion "Unsize" (borrow α1))) in
              let* α3 : unit := M.call (std.io.stdio._print α2) in
              M.alloc α3 in
            M.alloc tt in
          M.alloc tt) :
          M (M.Val unit);
        fun γ =>
          (let* _ : M.Val unit :=
            let* _ : M.Val unit :=
              let* α0 : ref str.t :=
                M.read (mk_str "cargo:rustc-cfg=limb_width_64
") in
              let* α1 : M.Val (array (ref str.t)) := M.alloc [ α0 ] in
              let* α2 : core.fmt.Arguments.t :=
                M.call
                  (core.fmt.Arguments.t::["new_const"]
                    (pointer_coercion "Unsize" (borrow α1))) in
              let* α3 : unit := M.call (std.io.stdio._print α2) in
              M.alloc α3 in
            M.alloc tt in
          M.alloc tt) :
          M (M.Val unit);
        fun γ =>
          (let* _ : M.Val unit :=
            let* _ : M.Val unit :=
              let* α0 : ref str.t :=
                M.read (mk_str "cargo:rustc-cfg=limb_width_64
") in
              let* α1 : M.Val (array (ref str.t)) := M.alloc [ α0 ] in
              let* α2 : core.fmt.Arguments.t :=
                M.call
                  (core.fmt.Arguments.t::["new_const"]
                    (pointer_coercion "Unsize" (borrow α1))) in
              let* α3 : unit := M.call (std.io.stdio._print α2) in
              M.alloc α3 in
            M.alloc tt in
          M.alloc tt) :
          M (M.Val unit);
        fun γ =>
          (let* _ : M.Val unit :=
            let* _ : M.Val unit :=
              let* α0 : ref str.t :=
                M.read (mk_str "cargo:rustc-cfg=limb_width_64
") in
              let* α1 : M.Val (array (ref str.t)) := M.alloc [ α0 ] in
              let* α2 : core.fmt.Arguments.t :=
                M.call
                  (core.fmt.Arguments.t::["new_const"]
                    (pointer_coercion "Unsize" (borrow α1))) in
              let* α3 : unit := M.call (std.io.stdio._print α2) in
              M.alloc α3 in
            M.alloc tt in
          M.alloc tt) :
          M (M.Val unit);
        fun γ =>
          (let* _ : M.Val unit :=
            let* _ : M.Val unit :=
              let* α0 : ref str.t :=
                M.read (mk_str "cargo:rustc-cfg=limb_width_32
") in
              let* α1 : M.Val (array (ref str.t)) := M.alloc [ α0 ] in
              let* α2 : core.fmt.Arguments.t :=
                M.call
                  (core.fmt.Arguments.t::["new_const"]
                    (pointer_coercion "Unsize" (borrow α1))) in
              let* α3 : unit := M.call (std.io.stdio._print α2) in
              M.alloc α3 in
            M.alloc tt in
          M.alloc tt) :
          M (M.Val unit)
      ] in
  M.read α0.
